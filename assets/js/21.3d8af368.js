(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{619:function(a,e,s){"use strict";s.r(e);var t=s(14),n=Object(t.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"总结http缓存机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结http缓存机制"}},[a._v("#")]),a._v(" 总结http缓存机制")]),a._v(" "),s("p",[a._v("http缓存在web性能优化中起了很大的作用，而http相关的文档讲述并不清晰，而且相当的杂乱，我在阅读多篇文章(文章文末标出)以及查看过"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP",target:"_blank",rel:"noopener noreferrer"}},[a._v("MDN文档"),s("OutboundLink")],1),a._v("之后做了一点整理和总结。")]),a._v(" "),s("p",[a._v("总的来说http有如下几种实现方式 "),s("code",[a._v("Pragma")]),a._v(" "),s("code",[a._v("Expires")]),a._v(" "),s("code",[a._v("Cache-Control")]),a._v(" "),s("code",[a._v("Last-Modified")]),a._v(" "),s("code",[a._v("ETag")]),a._v(" ，缓存方式又分为"),s("code",[a._v("强缓存")]),a._v(" "),s("code",[a._v("协商缓存")]),a._v(" 。")]),a._v(" "),s("h3",{attrs:{id:"强缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[a._v("#")]),a._v(" 强缓存")]),a._v(" "),s("p",[a._v("直接访问本地通过 "),s("code",[a._v("Pragma")]),a._v(" "),s("code",[a._v("Expires")]),a._v(" "),s("code",[a._v("Cache-Control")]),a._v(" 来判断有没有缓存，缓存有没有过期，如果没过期那么直接从本地取，服务器返回code "),s("code",[a._v("200 from cache")]),a._v("如果本地不能得到那么就访问远程。")]),a._v(" "),s("h3",{attrs:{id:"协商缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[a._v("#")]),a._v(" 协商缓存")]),a._v(" "),s("p",[a._v("协商缓存通过 "),s("code",[a._v("Last-Modified")]),a._v(" "),s("code",[a._v("ETag")]),a._v(" 来使用，客户端发送请求给后端验证缓存是否过期，服务器返回"),s("code",[a._v("304 Not Modified")]),a._v(" 属于协商缓存，则调用本地缓存。")]),a._v(" "),s("h3",{attrs:{id:"pragma"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pragma"}},[a._v("#")]),a._v(" pragma")]),a._v(" "),s("p",[a._v("这是一种比较古老的请求头，只建议在向下兼容http1.0的时候使用，当值为"),s("code",[a._v("Pragma:no-cache")]),a._v("，效果和"),s("code",[a._v("Cache-Control:no-cache")]),a._v("一样。")]),a._v(" "),s("h3",{attrs:{id:"expires"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#expires"}},[a._v("#")]),a._v(" Expires")]),a._v(" "),s("p",[s("code",[a._v("Expires")]),a._v("也是兼容http1.0的一项请求头。")]),a._v(" "),s("p",[a._v("通过服务端设置，给"),s("code",[a._v("Response Headers")]),a._v("添加一个GMT（格林尼治时间）作为"),s("code",[a._v("Expires")]),a._v("的响应头，客户端在发请求前，判断"),s("code",[a._v("Expires")]),a._v("的时间是否已经过期来决定是否向服务端发送请求。")]),a._v(" "),s("h3",{attrs:{id:"cache-control"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cache-control"}},[a._v("#")]),a._v(" Cache-Control")]),a._v(" "),s("h4",{attrs:{id:"请求头"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#请求头"}},[a._v("#")]),a._v(" 请求头")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("//告诉服务端，愿意接收一个请求时间为seconds秒的资源\nCache-Control: max-age=<seconds>\n//告诉服务端，愿意接收一个超出缓存时间seconds秒的资源，如果未定义，则允许超出任意时间\nCache-Control: max-stale[=<seconds>]\n//告诉服务端，希望接收一个seconds秒内被更新过的资源\nCache-Control: min-fresh=<seconds>\n//告诉服务端，不直接使用缓存，跳过强缓存的步骤\nCache-control: no-cache\n//告诉服务端，所有内容都不被缓存到浏览器中\nCache-control: no-store\n//告诉服务端，希望获取实体数据没有被转换过（如压缩）的资源\nCache-control: no-transform\n//告诉服务端，希望获取缓存的内容（若有）\nCache-control: only-if-cached\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br")])]),s("h4",{attrs:{id:"响应头"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#响应头"}},[a._v("#")]),a._v(" 响应头")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("//缓存必须在使用之前验证旧资源的状态，并且不可使用过期资源\nCache-control: must-revalidate\n//不直接使用缓存，跳过强缓存的步骤\nCache-control: no-cache\n//所有内容都不被缓存到浏览器中\nCache-control: no-store\n//不得对资源进行转换或转变。Content-Encoding, Content-Range, Content-Type等HTTP头不能由代理修改。例如，非透明代理可以对图像格式进行转换，以便节省缓存空间或者减少缓慢链路上的流量\nCache-control: no-transform\n//表明响应可以被任何对象（包括：发送请求的客户端，代理服务器，等等）缓存\nCache-control: public\n//表明响应只能被单个用户缓存，不能作为共享缓存（即代理服务器不能缓存它）,可以缓存响应内容\nCache-control: private\n//与must-revalidate作用相同，但它仅适用于共享缓存（例如代理），并被私有缓存忽略\nCache-control: proxy-revalidate\n//设置缓存存储的最大周期，超过这个时间缓存被认为过期(单位秒)。与Expires相反，时间是相对于请求的时间\nCache-Control: max-age=<seconds>\n//覆盖max-age 或者 Expires 头，但是仅适用于共享缓存(比如各个代理)，并且私有缓存中它被忽略\nCache-control: s-maxage=<seconds>\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br")])]),s("h3",{attrs:{id:"last-modified"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#last-modified"}},[a._v("#")]),a._v(" Last-Modified")]),a._v(" "),s("p",[a._v("第一次请求资源时，会将资源最后更改的时间以"),s("code",[a._v("Last-Modified: GMT")]),a._v("的形式加在实体首部上一起返回给客户端，当再一次发起请求时，客户端会带上返回的GMT，赋值给"),s("code",[a._v("If-Modified-Since")]),a._v("，若服务端判断时间没有更改，则返回"),s("code",[a._v("304 NOT MODIFIED")]),a._v(",那么便从本地缓存中取出值")]),a._v(" "),s("h3",{attrs:{id:"etag"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#etag"}},[a._v("#")]),a._v(" ETag")]),a._v(" "),s("p",[a._v("服务端在第一次请求资源时，会在响应头"),s("code",[a._v("ETag")]),a._v("上添加一个由某种算符得出的随机字符串，当客户端再一次请求该项资源时，会将之前缓存的字符串，自动带上给"),s("code",[a._v("If-None-Match")]),a._v("，服务端将得到的字符和服务器中的进行对比。如果不同，则重新抓取文件，若相同，则返回"),s("code",[a._v("304")]),a._v("。")]),a._v(" "),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),s("p",[a._v("强缓存中"),s("code",[a._v("Pragma")]),a._v(" "),s("code",[a._v("Expires")]),a._v("都是为了兼容老版本的http协议，而新版本中的"),s("code",[a._v("Cache-Control")]),a._v("组合更丰富，也更加强大。而弱缓存中"),s("code",[a._v("Last-Modified")]),a._v("中资源的任何变化都会更改时间，可能会重复加载完全一样的文件。"),s("code",[a._v("ETag")]),a._v("加载计算可能浪费性能。总的来说协商缓存需要后端返回是否取本地缓存，而强缓存是只要客户端有且未过期那么就取。")]),a._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[a._v("#")]),a._v(" 参考")]),a._v(" "),s("p",[a._v("链接：https://juejin.im/post/6844904047523135496")]),a._v(" "),s("p",[a._v("链接：https://juejin.im/post/6847902216200650760")]),a._v(" "),s("p",[a._v("链接：https://developer.mozilla.org/zh-CN/docs/Web/HTTP")])])}),[],!1,null,null,null);e.default=n.exports}}]);