(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{614:function(s,a,n){"use strict";n.r(a);var e=n(14),l=Object(e.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("当维护的项目越来越大时，可能修改一下需要好长时间才会构建完成，十分的浪费时间，我在网上查了一下webpack优化构建速度的方案最简单有效的有两个，第一个是使用dllplugin，他可以将一些不常改动的文件打包之后就不打包了，直接用就可以了。第二个就是happypack，利用多线程提升构建速度。")]),s._v(" "),n("h3",{attrs:{id:"ng-build-plus"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ng-build-plus"}},[s._v("#")]),s._v(" ng-build-plus")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("首先angular的webpack是不对外暴露的，ng 6之后 ng reject也废弃了，当然社区里提供了另一个方案。"),n("code",[s._v("ngx-build-plus")]),s._v("可以方便的配置webpack，可以去他的npm仓库看一下，文档介绍了这个包对应不同的ng版本 ，因为我ng版本是7，于是我"),n("code",[s._v("ngx-build-plus")]),s._v(" 也下载了7.0.0。之后将"),n("code",[s._v("angular.json")]),s._v("里的配置文件修改一下")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('"serve": {\n          //替换原来的配置"builder": "@angular-devkit/build-angular:dev-server",\n          "builder": "ngx-build-plus:dev-server",\n          "options": {\n            "browserTarget": "saas:build"\n          },\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("之后在目录最外层创建一个"),n("code",[s._v("webpack.extra.js")]),s._v("。之后的配置就可以写在里面了。"),n("code",[s._v("ngx-build-plus")]),s._v("会将我们添加的webpack配置与内置的webpack配置merge。")])]),s._v(" "),n("li",[n("p",[s._v("之后再"),n("code",[s._v("package.json")]),s._v("里修改"),n("em",[s._v("script")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(' "start": "ng serve ----extraWebpackConfig ./webpack.extra.js"\n \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])])])]),s._v(" "),n("h3",{attrs:{id:"配置happypack"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置happypack"}},[s._v("#")]),s._v(" 配置happypack")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("npm i -D Happypack")])])]),s._v(" "),n("li",[n("p",[s._v("之后在"),n("code",[s._v("webpack.extra.js")]),s._v("添加")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const webpack = require('webpack');\nconst path = require('path');\nconst HappyPack = require('happypack');\nmodule.exports = {\n    module: {\n        rules: [\n            {\n                test: /\\.ts$/,\n                //把对.js 的文件处理交给id为happyBabel 的HappyPack 的实例执行\n                loader: 'happypack/loader?id=happyBabel',\n              }\n        ]\n    },\n    plugins: [\n        new HappyPack({\n            //用id来标识 happypack处理那里类文件\n          id: 'happyBabel',\n          //如何处理  用法和loader 的配置一样\n          use: [\n            {\n              path: 'ts-loader',\n              query: {\n                happyPackMode: true,\n                //configFile: e.resolve(module, 'tsconfig.json')\n              }\n\n            }\n          ],\n          //线程数推荐为4\n          threads:4\n        })\n    ]\n}\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("happypack的配置比较简单，这样就结束了")])])]),s._v(" "),n("h3",{attrs:{id:"配置dllplugin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置dllplugin"}},[s._v("#")]),s._v(" 配置dllplugin")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("社区里很多简单的第三方配置方法，ng也有一个"),n("code",[s._v("webpack-dll-ng-module-loader/plugin")])]),s._v(" "),n("p",[s._v("下载之后直接")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('const {\n    CheatAngularCompilerResourcePlugin \n  } = require("webpack-dll-ng-module-loader/plugin");\nplugins: [  new CheatAngularCompilerResourcePlugin()]\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])])])]),s._v(" "),n("h3",{attrs:{id:"使用webpack-bundle-analyzer-查看打包情况"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用webpack-bundle-analyzer-查看打包情况"}},[s._v("#")]),s._v(" 使用webpack-bundle-analyzer 查看打包情况")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("npm i -D webpack-bundle-analyzer")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("let BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin;\n plugins: [\n//性能分析\n        // new BundleAnalyzerPlugin({\n        //     //  可以是`server`，`static`或`disabled`。\n        //     //  在`server`模式下，分析器将启动HTTP服务器来显示软件包报告。\n        //     //  在“静态”模式下，会生成带有报告的单个HTML文件。\n        //     //  在`disabled`模式下，你可以使用这个插件来将`generateStatsFile`设置为`true`来生成Webpack Stats JSON文件。\n        //     analyzerMode: 'server',\n        //     //  将在“服务器”模式下使用的主机启动HTTP服务器。\n        //     analyzerHost: '127.0.0.1',\n        //     //  将在“服务器”模式下使用的端口启动HTTP服务器。\n        //     analyzerPort: 8888, \n        //     //  路径捆绑，将在`static`模式下生成的报告文件。\n        //     //  相对于捆绑输出目录。\n        //     reportFilename: 'report.html',\n        //     //  模块大小默认显示在报告中。\n        //     //  应该是`stat`，`parsed`或者`gzip`中的一个。\n        //     //  有关更多信息，请参见“定义”一节。\n        //     defaultSizes: 'parsed',\n        //     //  在默认浏览器中自动打开报告\n        //     openAnalyzer: true,\n        //     //  如果为true，则Webpack Stats JSON文件将在bundle输出目录中生成\n        //     generateStatsFile: false, \n        //     //  如果`generateStatsFile`为`true`，将会生成Webpack Stats JSON文件的名字。\n        //     //  相对于捆绑输出目录。\n        //     statsFilename: 'stats.json',\n        //     //  stats.toJson（）方法的选项。\n        //     //  例如，您可以使用`source：false`选项排除统计文件中模块的来源。\n        //     //  在这里查看更多选项：https：  //github.com/webpack/webpack/blob/webpack-1/lib/Stats.js#L21\n        //     statsOptions: null,\n        //     logLevel: 'info' // 日志级别。可以是'信息'，'警告'，'错误'或'沉默'。\n        //   }),\n]\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("之后直接运行他还会打开一个8888端口的网页图形化显示打包状况，这里我就不贴图了")])])]),s._v(" "),n("h3",{attrs:{id:"当然在我搜索如何提升打包效率的时候知乎大佬直接推荐最近很火的snowpack以及vue3-0将推出的vite。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#当然在我搜索如何提升打包效率的时候知乎大佬直接推荐最近很火的snowpack以及vue3-0将推出的vite。"}},[s._v("#")]),s._v(" 当然在我搜索如何提升打包效率的时候知乎大佬直接推荐最近很火的snowpack以及vue3.0将推出的vite。")])])}),[],!1,null,null,null);a.default=l.exports}}]);